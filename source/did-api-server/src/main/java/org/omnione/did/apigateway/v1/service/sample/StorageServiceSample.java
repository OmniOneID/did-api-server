/*
 * Copyright 2024 OmniOne.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.omnione.did.apigateway.v1.service.sample;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.omnione.did.apigateway.v1.api.RepositoryFeign;
import org.omnione.did.apigateway.v1.api.dto.DidDocApiResDto;
import org.omnione.did.apigateway.v1.api.dto.VcMetaApiResDto;
import org.omnione.did.apigateway.v1.dto.DidDocResDto;
import org.omnione.did.apigateway.v1.dto.VcMetaResDto;
import org.omnione.did.apigateway.v1.dto.ZkpCredDefResDto;
import org.omnione.did.apigateway.v1.dto.ZkpCredSchemaResDto;
import org.omnione.did.apigateway.v1.service.StorageService;
import org.omnione.did.base.exception.ErrorCode;
import org.omnione.did.base.exception.OpenDidException;
import org.omnione.did.common.util.DidValidator;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Service;

/**
 * Implementation of the StorageService interface.
 * This service manages the retrieval of DID documents and VC metadata from a repository.
 *
 */
@RequiredArgsConstructor
@Slf4j
@Profile("sample")
@Service
public class StorageServiceSample implements StorageService {
    private final RepositoryFeign repositoryFeign;

    /**
     * Retrieves a DID document for a given DID.
     *
     * @param did The Decentralized Identifier (DID) to look up.
     * @return DidDocResDto containing the DID document.
     * @throws OpenDidException if the DID is invalid or not found.
     */
    @Override
    public DidDocResDto findDidDocument(String did) {
        return DidDocResDto.builder()
                .didDoc("meyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvbnMvZGlkL3YxIl0sImFzc2VydGlvbk1ldGhvZCI6WyJhc3NlcnQiXSwiYXV0aGVudGljYXRpb24iOlsiYXV0aCJdLCJjb250cm9sbGVyIjoiZGlkOm9tbjppc3N1ZXIiLCJjcmVhdGVkIjoiMjAyNC0wOS0wNVQwMTo1NTowNFoiLCJkZWFjdGl2YXRlZCI6ZmFsc2UsImlkIjoiZGlkOm9tbjppc3N1ZXIiLCJrZXlBZ3JlZW1lbnQiOlsia2V5YWdyZWUiXSwidXBkYXRlZCI6IjIwMjQtMDktMDVUMDE6NTU6MDRaIiwidmVyaWZpY2F0aW9uTWV0aG9kIjpbeyJhdXRoVHlwZSI6MSwiY29udHJvbGxlciI6ImRpZDpvbW46aXNzdWVyIiwiaWQiOiJhc3NlcnQiLCJwdWJsaWNLZXlNdWx0aWJhc2UiOiJ6Y3lzMWluNVdBUmdLeXZkdDd0NFFNMlhuUjZ2ck4xeVhjTmtpN3JwY1JncFoiLCJ0eXBlIjoiU2VjcDI1NnIxVmVyaWZpY2F0aW9uS2V5MjAxOCJ9LHsiYXV0aFR5cGUiOjEsImNvbnRyb2xsZXIiOiJkaWQ6b21uOmlzc3VlciIsImlkIjoiYXV0aCIsInB1YmxpY0tleU11bHRpYmFzZSI6InoyMW03am5oYmhkejZxNkZ4MWF6ZGpiQ1U5cDZuenBoMXNUdGY1OVBuM3J4QlkiLCJ0eXBlIjoiU2VjcDI1NnIxVmVyaWZpY2F0aW9uS2V5MjAxOCJ9LHsiYXV0aFR5cGUiOjEsImNvbnRyb2xsZXIiOiJkaWQ6b21uOmlzc3VlciIsImlkIjoia2V5YWdyZWUiLCJwdWJsaWNLZXlNdWx0aWJhc2UiOiJ6Y2lGOFp5aERpUkVvcUN1eTNwTVFrM2J5SlluNThXZkdXVjdoeWZqUmlYQ0IiLCJ0eXBlIjoiU2VjcDI1NnIxVmVyaWZpY2F0aW9uS2V5MjAxOCJ9XSwidmVyc2lvbklkIjoiMSJ9")
                .build();
    }

    /**
     * Retrieves metadata for a Verifiable Credential (VC).
     *
     * @param vcId The identifier of the Verifiable Credential.
     * @return VcMetaResDto containing the VC metadata.
     * @throws OpenDidException if the VC ID is invalid or the VC is not found.
     */
    @Override
    public VcMetaResDto findVcMeta(String vcId) {
        return VcMetaResDto.builder()
                .vcId("c184fb29-e6e1-4144-bae0-ccc44a3770df")
                .vcMeta("meyJjcmVkZW50aWFsU2NoZW1hIjp7ImlkIjoiaHR0cDovLzE5Mi4xNjguMy4xMzA6ODA5MC90YXMvYXBpL3YxL3ZjLXNjaGVtYT9uYW1lPWNlcnRpZmljYXRlIiwidHlwZSI6Ik9zZFNjaGVtYUNyZWRlbnRpYWwifSwiZm9ybWF0VmVyc2lvbiI6IjEuMCIsImlkIjoiYzE4NGZiMjktZTZlMS00MTQ0LWJhZTAtY2NjNDRhMzc3MGRmIiwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wOS0wNVQwMTo0ODo1OFoiLCJpc3N1ZXIiOnsiY2VydFZjUmVmIjoiaHR0cDovLzE5Mi4xNjguMy4xMzA6ODA5MC90YXMvYXBpL3YxL2NlcnRpZmljYXRlLXZjIiwiZGlkIjoiZGlkOm9tbjp0YXMifSwibGFuZ3VhZ2UiOiJrbyIsInN0YXR1cyI6IkFDVElWRSIsInN1YmplY3QiOiJkaWQ6b21uOnRhcyIsInZhbGlkRnJvbSI6IjIwMjQtMDktMDVUMDE6NDg6NThaIiwidmFsaWRVbnRpbCI6IjIwMjUtMDktMDVUMDE6NDg6NThaIn0")
                .build();
    }

    /**
     * Retrieves a Zero-Knowledge Proof (ZKP) credential schema by its identifier.
     *
     * @param id The identifier of the ZKP credential schema to retrieve.
     * @return ZkpCredSchemaResDto containing the ZKP credential schema.
     */
    @Override
    public ZkpCredSchemaResDto findZkpCredSchema(String id) {
        return ZkpCredSchemaResDto.builder()
                .credSchema("meyJpZCI6ImRpZDpvbW46TmNZeGlEWGtwWWk2b3Y1RmNZRGkxZToyOm1kbDoxLjAuMSIsIm5hbWUiOiJtZGwiLCJ2ZXJzaW9uIjoiMS4wIiwiYXR0ck5hbWVzIjpbIm9yZy5yc28uMTAwMDEuemtwY2l0eSIsIm9yZy5yc28uMTAwMDEuemtwcGhvbmUiLCJvcmcucnNvLjEwMDAxLnprcHNhbGFyeSIsIm9yZy5yc28uMTAwMDIuemtwc2V4Il0sImF0dHJUeXBlcyI6W3sibmFtZXNwYWNlIjp7ImlkIjoib3JnLnJzby4xMDAwMSIsIm5hbWUiOiJSU08gMTAwMDEgTmFtZXNwYWNlIiwicmVmIjoiaHR0cHM6Ly93d3cucnNvLm9yZy9zdGFuZGFyZC8xMDAwMS5odG1sIn0sIml0ZW1zIjpbeyJsYWJlbCI6InprcGNpdHkiLCJjYXB0aW9uIjoiQ2l0eSIsInR5cGUiOiJTVFJJTkciLCJpMThuIjp7fX0seyJsYWJlbCI6InprcHBob25lIiwiY2FwdGlvbiI6IlBob25lIiwidHlwZSI6IlNUUklORyIsImkxOG4iOnt9fSx7ImxhYmVsIjoiemtwc2FsYXJ5IiwiY2FwdGlvbiI6IlNhbGFyeSIsInR5cGUiOiJTVFJJTkciLCJpMThuIjp7fX1dfSx7Im5hbWVzcGFjZSI6eyJpZCI6Im9yZy5yc28uMTAwMDIiLCJuYW1lIjoiUlNPIDEwMDAyIE5hbWVzcGFjZSIsInJlZiI6IiJ9LCJpdGVtcyI6W3sibGFiZWwiOiJ6a3BzZXgiLCJjYXB0aW9uIjoiR2VuZGVyIiwidHlwZSI6IlNUUklORyIsImkxOG4iOnt9fV19XSwidGFnIjoiVGFnMSJ9")
                .build();
    }

    /**
     * Retrieves a Zero-Knowledge Proof (ZKP) credential definition by its identifier.
     *
     * @param id The identifier of the ZKP credential definition to retrieve.
     * @return ZkpCredDefResDto containing the ZKP credential definition.
     */
    @Override
    public ZkpCredDefResDto findZkpCredDef(String id) {
        return ZkpCredDefResDto.builder()
                .credDef("meyJpZCI6ImRpZDpvbW46TmNZeGlEWGtwWWk2b3Y1RmNZRGkxZTozOkNMOmRpZDpvbW46TmNZeGlEWGtwWWk2b3Y1RmNZRGkxZToyOm1kbDoxLjA6VGFnMSIsInNjaGVtYUlkIjoiZGlkOm9tbjpOY1l4aURYa3BZaTZvdjVGY1lEaTFlOjI6bWRsOjEuMCIsInZlciI6IjEuMCIsInR5cGUiOiJDTCIsInZhbHVlIjp7InByaW1hcnkiOnsibiI6IjEyNTU1OTc3MzAzNTI4NTUzOTk0NjMwODU4MDY3NDkwOTg0OTUzODcyNzE3NTU2MDQ3Mzc5MTc3NjQ1NTY2Njg0ODYxMjM0OTE3ODgzMTMzOTEzMTEzODM0NzU1NDIwMDQ0MDQ1MDA0MzY2MDE0MzQwODg3NTA3Mjg0NDQ3NzkyODMyMTA2NDMwODAyNTA3NzgxMTM1NzIzNTM1NTY2MzUxMDE2MjY0OTQ2NjY5NTUyNzI4MjQxMzAxNTY1MzUzMzI3NjIwNTUxODkwNjc4MDU3Mjc1NDYyNTU5OTUwMjYxMTA4MTYxMTAxNDc3ODMzNDY5Mjk1MjIwMDUxNTIzODIyMzMyMDE1MjExMzA5NjAxNzg5OTEzOTM5Mzg0Mzk1Nzk3MTUwNzM5ODE0NjM2NTM3ODA0NDYwOTU3OTI0NjE0ODEzNDU3MTYyNTgyMTM3MjgzMzk0MDgxMTg4NTQ2MDk4OTczOTIxNzgyNTcyNDc2MTE0NDExODg4Nzk5Mzk2MjM5OTM3MzE2MTQ0OTg1Njc5MTg0MDI0MjAwMjQwNDQxNzkwNDE2NTM5MTE3OTY1MDQ0MTg0NjE2NDgyMzg3MTU1ODMxOTk5ODk2NDg2NTgxODkxNjgyNzIxMDcxNDE0MTk1OTI5MzIyNjg0NjA5MzY2Nzc3NTcxNzA3MzEyNjExMjk4Njk5ODU3NDIwMDEwMTUyMzI0NTczMjE5MjczMjY4MDYzMjY0OTY3NDY1NjExNDg1MTExOTE4NTI1MTgxMjMyNjQxNzkwODgzOTE2NjY4NDk1MDYwNjM5Mjg5ODUzNDMzMzU5ODU3NyIsInoiOiI1NjM4MDI3NzkxMzg5NjU2ODE5OTI3MjA1NTEwMTE1MzA2Nzk3ODczMzcxMTgyMDQwMzU3NTQ5NjQxNTkzNDI2MjUxMzI3NTU0OTE5NTMzNDAyMTQwODI0OTI0NDMxNTU0NzMzOTEzNDI0MDM0MDMxODY5MTU0OTA3MDM4Nzc5MjMyMTgyOTk1ODg5Nzc0MDI5NzA2MTUwMjExMDEwMzE0MjEwNjMyNTg3MTg1NTg3MzAwODc4Njc4MzQyODA5MTQwODY1OTgxNzM3MzMxMDg4ODE3NDEzNTA0MjU2MjMzMDA2MzMwMzY5MTgxNzgzNTMyODQzMDQ4OTQ5Mjg0MDE5NjA1MjkyODc2NzY0NzM3MTYxOTE2NTQ5NDg5OTk1MzI0ODYyODA0MzY5MDQwOTk1NDc0NTY0NzIyNzY2NzgzNjI5ODY0NDQzNTE4MjQ1Njg0NzcxMjUwMzgzODgwOTM0MTA3NzU1MjczODEwMTQyOTAyNTY0MzkyNjM2NDE5MTM1OTIwMDMwMjM4NTY3MTExMTQ2NTI4NzA3MTM2OTEwMzMxODQ3NTQ0NzA0MTY2Mzg4NDgyNDA2OTM3MjMzNzYyMzE3NjMwNTU3NDQ0NTEzMjgyNTY0MTA1OTA0NDIxMTQ1MzAzMTE1Nzg3Mjk0MDk5Nzg3MTQ5MTMyMjk2ODUzMDc0NTg4ODY2ODg4NDU4OTM5MTIzNTk2OTgzNDc2NTA0NzY5NTU2ODA1MDk2NTg5MjU1NzMzMDYxOTMyOTM4MjIzMzU0NDQ2MjEwODYwMzgwMzY3NDQ0OTU3MTM2OTUwNzkyMzE4MDMwMiIsInMiOiIxMDk2NTgzODgxNTI4MzUxNzA5NDkwNTc1MTgzNDE1MTM5MzI1NTg4NjgwNDY1MTIyOTk2Mjg5NDUxMjY2ODUxNDY2NTM4NjIyNTg1NTU3ODE5Nzk5Mjc3MzM5NzY0Nzk5OTQ5NzE1MDM0OTE0NjE0NTI3ODQxNDMxNzU0MzYyNzQ1MTUyMTU3MTUzODY0MjY0MTEyMzI4NjQ3NjU1MjU5NDMxODQ3NjY1OTYzMDg1MDQzODM5OTc1ODE0OTEwNTY4MDg3NTEyNTQ1NTMyMzUyNTM3ODMwMDA2Mzg4OTAxOTIzMTkwNjE4MzE2MDg0MzY2ODk3NjAwODM3Mjc5MDgwMDc0MzA2OTQ4Nzg4Mjk2MjU1NjAwNDUwMTUyNDY1NjI5MzM2MDE5ODg1MzY2ODYxODgyNzg0NDkxOTE3NDgyMTg5Nzk1NDcyODg4MDk4NzUwNDcxMDEwODQwNDA4NTMyMjU1NjY0ODY3NTIwNjY2NTM5MTQxOTMxMTIyMTg3NzEwNDE0ODg2ODU2ODQ5NjgxNjQ2NTY0Mzk3MDMyMTc1NjkzMzY3NjI5MzYyODg4MzU1OTI4Njk1NzUxNDg0NTY3MTQxNzY0MTY0MDA1MDgwMzgzMDI0ODE1NjA5NTk2MjAwNzk1NDk0Mjg5NjkzMDg4MjIzMjExODc4Mjg2ODIzNDQ2NzYzODQxMzg0Mzk3MTc3NDc1MDcyMTc5MTEzMzgwOTQ1MDQ0MjQ1NTMwMjYyMzExMjg2MjU4NjYzMjkwNDE3MTgzMTU1MTEyMzAxNTk1NzQ2OTI0MjMzNjU0OTg2Nzc0MTUyMjA2NjYiLCJyIjp7InprcHNleCI6IjQ3NDMxODc3NjQ2NTkyOTIwMzMxNDQxMTM5MTM1MjQ1NDk1MTk5ODg1MzU5NTYyOTU2MTY0OTUzMTQ0Nzc0ODA0NjM1ODIzODQwOTY2MDU5NjE4NTY2Njk1NDEzMDI5MjM4NDAwNTg4NzE5MDE2NzE1MDUxMzM3ODI1NDY1NDU3Nzc1MTU2ODUzNTg5MDQ2NjkyNDg4MzIzODU1NjQzMDA0Mzk4MjYwMzMxNjY2NjY4Njk3NzkyMzI0OTI0MzE2NjAwMzgwNDcxMzI4NDkwMzI4NzM2ODgwMDI1NDQ5MjgzMzM2Njc5MDUzMjkwNDg4OTkyMjA5MDIyNjI3MTg3MjA0MDA5MTE0NDU4MDY2OTkyNjg4MjQ3OTYzMDQ2NTU5OTkyNzQ3OTA4Nzc5NDY2MDg0MDk2NjI1MjQyMzI5NjU2OTk5ODM1MzgwMTE5MjEwNDAwMzEyNTAxOTA4OTUwNjIzODYzMTc2MzIyMjM5NjMxNzU0MTM2NTY4MjE1MDcwNjIyNTIzOTk0MzYwMTA5OTYyODMxNjk4ODQzNDI3OTM1ODg3NDQxMzcwODk0NDQ1NDE2MDE3NjY5NjExNzkwMDk1NjYyMTM4MzA0NDI2Njk4Nzg3NDI1NjE2NzQzMDYwODY2NDk2MDE3NDYxMDI2NzIwODM0NDY1NzA5NDY0NDQ2NTkzODg3MjQxNDE3NDYyNDExODk3ODAwNjM1NDU0NTQ4NTE0NTgzMzQ2Mjg3MjQ0OTYxMTYzMTE1Mjc2NjM1OTQ0NTg2NjgyNDg4MTEzNzAyNDk2MjQ4NTAxNTYwNjY2OTMzNDg1MTc0IiwiemtwYXNvcnQiOiI4OTcxMTE0MzQzNzk2MzAxMTg2MTY4MTA3Njg4ODc3NTY5NjI2OTk2OTI4ODk1NjA4Njk5MTQ5MzM5NzE4NjIzOTg2MTUyMzMzNDAzMzkwMjk3ODA5MzYzMDg5MDg0NTM5NjUwMDg3MjcwODc4NTAyMDM4MTE1MTg5Njk0Mjg3MjE5MDc4ODczNTc5OTMzMTMyNzI4OTc0Njc1ODQ0NTUzMjkzMzQ4MzMwMjIyNTMxMTI3MTUyMTkzNDQ4ODE5Njc5NTYzNTAwNjkxMjcxODEzODc0Nzk5MzI4ODE2NTE2NjAzNDcwNjIxNDYzNzQ5NDcwMjE2ODU3ODg2NDIyNjQyMzc3OTE2NjUwMjY4NjA2NTY3MzU4NDMzNTQ5NjAzNjU2ODU5MDY0MzIyNDI5MTE5Mjk0NDY3ODgzNDg5ODQ2NzQwMTQyNDk4Nzc1OTQwODM2NTYwOTkyOTY1NjcwMjc2NzQxMDI3OTg0NjM1OTcyMDg5MDUzNzMxNzk1MzY5NTQyNzY0NDk4Njc4NTc1MjU3ODE1MjA2OTM4NTA4MjAwMjA1ODk4OTE4ODU4NzcxMzQ5NDY4MTU1MjkxMTIwNzE4MTE1MTQ4NDA0MDQ0NDUyNTMyMjU4NzQ2NDIyNDQ0ODgwOTY1MjY4MjI2MTI1Njk0MjU4MjA2MjE0MTk4NDAzMDU1MTA4NjMyNTk0NDIyOTQ2MTYyNDAxMDgyOTU3NzQxMDI3MTEwODgxNzI3NjA1MjMwNjU3NTYxMjY1MTgwODk1OTM0MzgxNDM0MDg3OTcyNTI4NjUzMTYwMzE1OTkxNDk5Njk0Mjg2OCIsInprcGFkZHIiOiI2NjUyOTMyNjM0NDgyNDA1MTMzMjkwNjk5ODA0NTQxMTE0Nzc2ODQ1NjUzMzczNDc3MDI5MDM3Njg1NDM1MjQyMjg3OTAyMTY0NzgzNjM2Njg3NTE2Mzc0NzUwMDU2OTY4MjYyNDQ3NzA5NTc4OTY5OTcwOTcxNjA5MTMzNjExNzg2MDc5MjM4NDg4ODE2NTc2NDI0MTA3ODM0OTM0NTQ5Mzg0MDIxNTI3MTExMDY0MTA0NTg5MjA0MTQ1MjExMDg3OTkwOTQwNzEzNzgzNzc3OTMwMDQyNDA3NDQ3NjEzOTcxNDExNDk1NzE0NjYzODYxODQ2MDA2MDg3NjEyNzM5MjIyOTYwMzc5OTI3MTA5MDMwNzExMDI0ODQzOTg1MjI4NDY1MTA3MjExMTI4OTIzOTM2NDI3MjUxNTgyNDYwMjk2MTAyNjAzNDgzNDk2NzcxMDQxMjMyNjA2NjM4NDE1OTQ1MTgxMzAxMTM0OTYxMzg2MDYzODgzNDc2MjAxMzc3OTUxNDE2MjEzNTE2MjA1NTIyOTg1NTQzNTI2ODE2Nzk4MTgyMzIyMTM0ODkwMTU0OTgyOTIwNDU4MjYyMjg3NzU0NjQ0ODIwODk5MzYyMDMxNDUzNzUzMTkyMDU0Nzg0MjcwMTg4Njg4ODQyNjI0NTIyNzQ2MTAwNjk2NzQzNjgzNjU5NzYwNDczNzcyMDA4MjE2MjA5NzgyMTQ2NDYzMzQzNzMxODc5NDgxMDc3NzM3MDkwMjAyMzk0NTA4MTI2MTAxNzAyNjA3ODE2NTA5MTM4ODY0MjAxMjg0MDgxNjE2ODI3MDI3MiIsInprcGJpcnRoIjoiMjE4NDk0MTA1MDQxNTM4NTY5NTAyNzkxNDU1ODM3OTA4MDg2MjUxMzU1MzE3NDU2Mzg0MzcwNjgxMzk5MDg0NTYyNTkwNTY5NDE4NjU1NTU0NzE2MDgzODUzMjc1NDQ3MzkwNzg1ODkwMDA1NTUzOTUzNzU5MTczNTU4NzE4MDA3Njg0MjI1MTQ1NDczOTIwOTIxNDEyMTQ0NzE1Mzg1NDcwMzUyNjA1NDk4MTE1NjQzOTEwMTYyMTMwNjI5NTYxOTA3ODgxMzI3NzA4MTUyMjk1Mjk5NjgzODU3ODA2MzkxNTE5MzY5ODYyMzk1ODkzNjI3MjY1Njc0NjY3NDE3OTExNTA0MjYwODE4ODg1MTYwNDU2MDU5Njk3OTkxNDU1MjMxNzIxMzc4NTE3ODA5MjAwMDI4NDQwODYzOTU5MzE2Mjg4NDYwNTAwMTI4OTIyNTM0ODk2NjkzNDk1OTM5ODEwODY3MzcwMTg2MjkwNzUzNTc0NjEyNDAyMzYyMzE1MDM0NjI4MjI4MjE2OTYxNDkyNDg2OTk0MzU1NDYzMjYwMzQ3NDQ3Njk4NDg5NjkyNDg0MTc5MDY2OTM2NDQyNTM0OTc0OTMzNzUwNjY2MzY3NjkxODY4NTYyODM2NjYzODUzMjgxMzExMjUzOTg2NTYyNjE3Mjc1NzAxNzEyOTU5NTAwMjYzMzA4NDM2ODU4NjcwODA0ODYwMzYzODg2NjM3OTk4MDQ2NTUwMjY3NDczMDQ4Mjk2ODc0MTI0MTE1NTgyOTEyMDMwMjgxNTU0MzU4ODgyNjM2ODM5NDk2MzI4MjU0NTM0NTEiLCJtYXN0ZXJTZWNyZXQiOiI4NjY2NTMxNjk0NDczNjc5OTIwMjU1NjcyNjY1NTkzNzgyNDc3MzE2MzA1NTQ1OTYzNDM3NzkzMjYyMjE0ODQ5MTQwNzU4MDcxMDc0MzI4Mzg5MTQyODUzMzA1NjY5MTU0NjU2ODEzNDAxODY4NTUxMjI5OTkyMzY4Mjg0MDAyNTM1MzEzMzMwNzQ0NzA5NzQ5NzAwOTc0NTgxOTI0ODk5NjMzMzc2NzIyNzc5MDI3OTU0MzUzMDQ4ODk5MTU4NzgzMjk2NjIzNDUxMTMxMDAwMjgyODI2OTg2ODcwOTAwMzAxMTcyNTk2ODU5ODQ1MjM3NjI0ODY2NDE3NzQ3OTYwMDE0NTk2OTQ1Mzc3NjM1MzU4ODY1NTE3MTMwOTk0ODcxODQ3NDUzMTA2MzQxNjIzNzY2MDYzNTU2NjE5NTU3OTk3NTQ5OTEwMTY3MTgyNzYzNzQ5OTYxOTQ2Mjk3MDAzMDg3MTE5ODk4NTYwNTgxMTI0MDY3ODI5MTc0MjQ1NzEyMzU5MjQwMDM3MDMwOTYyNDU3NjI2MjUxNzc4MzU4MzgzODIzMzQzNjIyNjE3MDIwMjM0NjQ0NTE4NTE4Nzg0MDY1MzU1OTg5MDU3MjI4MDk4NzY0MTI4MzIwOTQyMTkxNzM0NTA1MDg1MjU1MzEyMzIxOTg2OTcwNDg0NjE1MzE4NjEwNTE4NTU1NzEzNzg2MzgxNjg5OTUzNjk0Njg3MDY4ODEyMjg0OTA4NjA0NTIwMTkyMjIwMjk2NTc0NTYxMTI2OTMzMTA0Njg1NjE3NTMxNjQyMjUxMDU3NzQwNjQwODI2NzUyNCJ9LCJyY3R4dCI6IjU1MDE1NDc1OTEwNzA3ODk5ODUxNDk3MDUzNzQ0MjUwNzQ5MzI1OTQ0MzMyNjk4OTUxMjE2NDAwOTE1MTE4Mzg3MTU4NDQzMDc2Mjc5NzQxNjkwNjI2NzQ4NTAwMTM3MTkxMzI0MzgyNTk1NjU3MDA0NzYzMjk1Njc1NzMzNzYwNDc0MjY5OTIwNzkwMTMyMzg4MTgwOTUxNTMwNDQ2NDM3ODE5MzMwNTY2ODY5NTYyMzc4ODc1Njg4MDI4NTY3ODUwMDU0NDMxNDU0OTI3MTkxMjQ5ODIwMDQxOTg0NTM1NzcyNTY3NjQxNTg5NzEyMTQ4Nzg0MTI0MDIxMjUwMTI4NzczODA4ODYyMjM0MjU5NDYxOTU0NDIzNDY4MjE0MzUyNDg4NzMxMDU1NDQwOTkyNjY5NDgxODY4Mjk5Nzg2NDM0NzYzMzE5MzIxNzA2MDkzNTkzMTUxNDE2MzEzMDc1MzUzMzcxMTQ0MTg5NzU2OTg3Nzg0MzAwNzg2ODAyMTY2MDU5MjUyODEwMzA3MDIzMTU1MTU3ODY3MjIxMDkxNzc2MDAyMjIwMTY5NDE0NjM3MjcwNTU4MTUwNzg3ODkwMTkxMDAyMDU5MjIwNzAzNDU2MzIzMzA2MTk1MjU1MDQxOTgwMzY5NTE4NDc2MTY2NTA5NzAxODg1MTMyNDU5Nzk4NTA1MjUwMTg0MDE0MjQxMTc1ODkwODEzMTE2NTM5MjQ1MzAxODkxMzkxMTQ4OTQ5MzY5MjYyMjYzNzkwNTA1MDUwNDEzODQyODkwNTc2NzY4MTk1MTI5NTcwNzcwMzM4NTg3NjI2In19LCJ0YWciOiJUYWcxIn0")
                .build();
    }

    /**
     * Validates the given DID.
     *
     * @param didKeyUrl The DID to validate.
     * @throws OpenDidException if the DID is null, empty, or invalid.
     */
    private void checkValidation(String didKeyUrl) {
        if(didKeyUrl == null || didKeyUrl.isEmpty()){
            throw new OpenDidException(ErrorCode.DID_NOT_FOUND);
        }
        if (!DidValidator.isValidDid(didKeyUrl)) {
            throw new OpenDidException(ErrorCode.DID_INVALID);
        }
    }
}